[tool.poetry]
name = "nama"
version = "0.0.1"
description = "NAme MAtching for personal names"
authors = ["Dallan Quass and Richard Chesworth <dallan@gmail> and <chesworthrm@familysearch.org>"]
repository = "https://github.com/rootsdev/nama"
documentation = "https://rootsdev.github.io/nama/"
readme = "README.md"
packages = [
  {include = "nama"}
]

[tool.poetry.dependencies]
python = ">=3.12,<4.0"
pandas = "^2.2.3"
mpire = "^2.10.2"
numpy = "2.0"
pathlib = "^1.0.1"
boto3 = "^1.35.44"
unidecode = "^1.3.8"
tqdm = "^4.66.5"
scikit-learn = "^1.5.2"
torch = "^2.5.0"
pyarrow = "^17.0.0"
pandarallel = "^1.6.5"
jellyfish = "^1.1.0"
ipywidgets = "^8.1.5"
matplotlib = "^3.9.2"
cologne-phonetics = "^2.0.0"
phonetics = "^1.0.5"
pyphonetics = "^0.5.3"
ray = {extras = ["tune"], version = "^2.38.0"}
hyperopt = "^0.2.7"
numba = "^0.60.0"
umap-learn = "^0.5.7"

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.0"
pytest-cov = "^4.0.0"
deptry = "^0.16.2"
mypy = "^1.5.1"
pre-commit = "^3.4.0"
tox = "^4.11.1"
ipykernel = "^6.29.5"
notebook = "^7.2.2"
jupyterlab = "^4.2.5"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.4.2"
mkdocs-material = "^9.2.7"
mkdocstrings = {extras = ["python"], version = "^0.26.1"}

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
files = ["nama"]
disallow_untyped_defs = "True"
disallow_any_unimported = "True"
no_implicit_optional = "True"
check_untyped_defs = "True"
warn_return_any = "True"
warn_unused_ignores = "True"
show_error_codes = "True"



[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
target-version = "py39"
line-length = 120
fix = true
mccabe.max-complexity = 15
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
    # Possible hardcoded password
    "S105",
    # String contains ambiguous characters
    "RUF001",
    # Create your own exception
    "TRY002",
    # avoid long messages in exceptions
    "TRY003",
    #
]

[tool.ruff.format]
preview = true

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["nama"]


[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]
